═══════════════════════════════════════════════════════════════
  САДАКА-ПАСС - ИНСТРУКЦИЯ ПО ЗАПУСКУ
═══════════════════════════════════════════════════════════════

📌 ЧТО СОЗДАНО:
✅ Backend API (FastAPI + PostgreSQL)
✅ Telegram Bot с inline-командами
✅ Mini App (React + TypeScript)
✅ Документация на русском языке
✅ Docker конфигурация
✅ Интеграция платежей (YooKassa, CloudPayments)

═══════════════════════════════════════════════════════════════
📋 БЫСТРЫЙ СТАРТ (3 ШАГА)
═══════════════════════════════════════════════════════════════

Шаг 1: Настройте переменные окружения

Создайте .env файлы из примеров:
  - backend/.env      (из backend/env.example)
  - bot/.env         (из bot/env.example)
  - frontend/.env.local (из frontend/env.example)

Заполните минимум:
  - TELEGRAM_BOT_TOKEN (из @BotFather)
  - DATABASE_URL (PostgreSQL)

Шаг 2: Установите зависимости

Python:
  python -m venv venv
  source venv/bin/activate  (Windows: venv\Scripts\activate)
  pip install -r backend/requirements.txt
  pip install -r bot/requirements.txt

Node.js:
  cd frontend && npm install && cd ..

Шаг 3: Запустите

npm run dev

Или через Docker:
  docker-compose up

═══════════════════════════════════════════════════════════════
📚 ДОКУМЕНТАЦИЯ
═══════════════════════════════════════════════════════════════

НАЧНИТЕ ЗДЕСЬ:
  📖 START_HERE.md - Пошаговая инструкция (ПРОЧТИТЕ ПЕРВЫМ!)

ДАЛЬШЕ:
  📖 SETUP.md        - Подробная настройка
  📖 DEPLOY.md       - Деплой на продакшн
  📖 QUICK_START.md  - Быстрый старт
  📖 TECH_SPEC.md    - Техническая спецификация
  📖 SUMMARY.md      - Что готово

═══════════════════════════════════════════════════════════════
🔧 ТРЕБОВАНИЯ
═══════════════════════════════════════════════════════════════

• Python 3.11+
• Node.js 18+
• PostgreSQL 15+ (или Docker)
• Telegram Bot Token (от @BotFather)

═══════════════════════════════════════════════════════════════
✅ ЧТО РАБОТАЕТ
═══════════════════════════════════════════════════════════════

Backend:
  • http://localhost:8000/docs - API документация
  • http://localhost:8000/health - Health check

Frontend:
  • http://localhost:3000 - Mini App

Bot:
  • /start - Главное меню
  • /sadaqa - Пожертвовать
  • /support - Поддержать
  • /zakat - Калькулятор закята
  • /campaigns - Кампании
  • /partners - Фонды

═══════════════════════════════════════════════════════════════
🚀 ДЕПЛОЙ
═══════════════════════════════════════════════════════════════

Frontend → Vercel
Backend + Bot → Railway/Render
Database → Supabase

Подробно: см. DEPLOY.md

═══════════════════════════════════════════════════════════════
❓ ПОМОЩЬ
═══════════════════════════════════════════════════════════════

Если что-то не работает:
  1. Прочитайте START_HERE.md
  2. Проверьте .env файлы
  3. Проверьте, что все сервисы запущены
  4. Посмотрите логи

═══════════════════════════════════════════════════════════════
📝 СТРУКТУРА ПРОЕКТА
═══════════════════════════════════════════════════════════════

sadakpro/
├── backend/     FastAPI backend
├── bot/         Telegram bot
└── frontend/    React Mini App

Всего: ~50 файлов, ~2000 строк кода

═══════════════════════════════════════════════════════════════

🎉 Проект готов! Начните с START_HERE.md

═══════════════════════════════════════════════════════════════

